{"version":3,"sources":["db-test.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAEA,IAAM,OAAO,QAAQ,KAAR,CAAb;AACA,IAAM,OAAO,QAAQ,aAAR,CAAb;AACA,IAAM,IAAI,QAAQ,WAAR,CAAV;AACA,IAAM,KAAK,QAAQ,KAAR,CAAX;;AAEA,IAAM,yBAAuB,KAAK,EAAL,EAA7B;AACA,IAAM,KAAK,IAAI,EAAJ,CAAO,EAAC,IAAI,MAAL,EAAP,CAAX;;AAEA,KAAK,MAAL,CAAY,gBAAZ;AAAA,kEAA8B,iBAAM,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACtB,GAAG,OAAH,EADsB;;AAAA;AAE5B,cAAE,IAAF,uBAAO,qCAAG,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqB,qBAArB;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAKA,KAAK,KAAL,CAAW,oBAAX;AAAA,mEAAiC,kBAAM,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzB,GAAG,UAAH,EADyB;;AAAA;AAE/B,cAAE,KAAF,yBAAQ,sCAAG,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAsB,wBAAtB;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAKA,KAAK,KAAL,CAAW,MAAX,CAAkB,kBAAlB;AAAA,mEAAsC,kBAAM,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACnB,EAAE,OAAF,CAAU,EAAV,CADmB;;AAAA;AAChC,gBADgC;AAAA;AAAA,mBAE9B,EAAE,MAAF,CAAS,MAAT,EAAiB,GAAjB,CAAqB,IAArB,CAF8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAKA,KAAK,YAAL;AAAA,mEAAmB,kBAAM,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjB,cAAE,EAAF,2DAAY,+CAAG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0B,UAA1B,EAAsC,uBAAtC;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA","file":"db-test.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst uuid = require('uuid-base62')\nconst r = require('rethinkdb')\nconst Db = require('../')\n\nconst dbName = `platzigram_${uuid.v4()}`\nconst db = new Db({db: dbName})\n\ntest.before('setup database', async t => {\n  await db.connect()\n  t.true(db.connected, 'should be connected')\n})\n\ntest.after('disconect database', async t => {\n  await db.disconnect()\n  t.false(db.connected, 'should be disconnected')\n})\n\ntest.after.always('cleanup database', async t => {\n  let conn = await r.connect({})\n  await r.dbDrop(dbName).run(conn)\n})\n\ntest('save image', async t => {\n  t.is(typeof db.saveImage, 'function', 'saveImage is function')\n})\n"]}